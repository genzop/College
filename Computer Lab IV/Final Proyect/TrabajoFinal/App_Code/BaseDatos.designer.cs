#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TrabajoFinal")]
public partial class BaseDatosDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertVendedor(Vendedor instance);
  partial void UpdateVendedor(Vendedor instance);
  partial void DeleteVendedor(Vendedor instance);
  partial void InsertArticulo(Articulo instance);
  partial void UpdateArticulo(Articulo instance);
  partial void DeleteArticulo(Articulo instance);
  partial void InsertCliente(Cliente instance);
  partial void UpdateCliente(Cliente instance);
  partial void DeleteCliente(Cliente instance);
  partial void InsertDetalle(Detalle instance);
  partial void UpdateDetalle(Detalle instance);
  partial void DeleteDetalle(Detalle instance);
  partial void InsertDomicilio(Domicilio instance);
  partial void UpdateDomicilio(Domicilio instance);
  partial void DeleteDomicilio(Domicilio instance);
  partial void InsertLocalidad(Localidad instance);
  partial void UpdateLocalidad(Localidad instance);
  partial void DeleteLocalidad(Localidad instance);
  partial void InsertPai(Pai instance);
  partial void UpdatePai(Pai instance);
  partial void DeletePai(Pai instance);
  partial void InsertPedido(Pedido instance);
  partial void UpdatePedido(Pedido instance);
  partial void DeletePedido(Pedido instance);
  partial void InsertProvincia(Provincia instance);
  partial void UpdateProvincia(Provincia instance);
  partial void DeleteProvincia(Provincia instance);
  partial void InsertRubro(Rubro instance);
  partial void UpdateRubro(Rubro instance);
  partial void DeleteRubro(Rubro instance);
  #endregion
	
	public BaseDatosDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TrabajoFinalConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public BaseDatosDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BaseDatosDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BaseDatosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BaseDatosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Vendedor> Vendedors
	{
		get
		{
			return this.GetTable<Vendedor>();
		}
	}
	
	public System.Data.Linq.Table<Articulo> Articulos
	{
		get
		{
			return this.GetTable<Articulo>();
		}
	}
	
	public System.Data.Linq.Table<Cliente> Clientes
	{
		get
		{
			return this.GetTable<Cliente>();
		}
	}
	
	public System.Data.Linq.Table<Detalle> Detalles
	{
		get
		{
			return this.GetTable<Detalle>();
		}
	}
	
	public System.Data.Linq.Table<Domicilio> Domicilios
	{
		get
		{
			return this.GetTable<Domicilio>();
		}
	}
	
	public System.Data.Linq.Table<Localidad> Localidads
	{
		get
		{
			return this.GetTable<Localidad>();
		}
	}
	
	public System.Data.Linq.Table<Pai> Pais
	{
		get
		{
			return this.GetTable<Pai>();
		}
	}
	
	public System.Data.Linq.Table<Pedido> Pedidos
	{
		get
		{
			return this.GetTable<Pedido>();
		}
	}
	
	public System.Data.Linq.Table<Provincia> Provincias
	{
		get
		{
			return this.GetTable<Provincia>();
		}
	}
	
	public System.Data.Linq.Table<Rubro> Rubros
	{
		get
		{
			return this.GetTable<Rubro>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIdentityRubro")]
	public ISingleResult<GetIdentityRubroResult> GetIdentityRubro()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<GetIdentityRubroResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIdentityArticulo")]
	public ISingleResult<GetIdentityArticuloResult> GetIdentityArticulo()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<GetIdentityArticuloResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIdentityPedido")]
	public ISingleResult<GetIdentityPedidoResult> GetIdentityPedido()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<GetIdentityPedidoResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendedor")]
public partial class Vendedor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdVendedor;
	
	private bool _Administrador;
	
	private string _Usuario;
	
	private string _Contrasenia;
	
	private string _Nombre;
	
	private string _Apellido;
	
	private EntitySet<Pedido> _Pedidos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVendedorChanging(int value);
    partial void OnIdVendedorChanged();
    partial void OnAdministradorChanging(bool value);
    partial void OnAdministradorChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnContraseniaChanging(string value);
    partial void OnContraseniaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    #endregion
	
	public Vendedor()
	{
		this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVendedor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdVendedor
	{
		get
		{
			return this._IdVendedor;
		}
		set
		{
			if ((this._IdVendedor != value))
			{
				this.OnIdVendedorChanging(value);
				this.SendPropertyChanging();
				this._IdVendedor = value;
				this.SendPropertyChanged("IdVendedor");
				this.OnIdVendedorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
	public bool Administrador
	{
		get
		{
			return this._Administrador;
		}
		set
		{
			if ((this._Administrador != value))
			{
				this.OnAdministradorChanging(value);
				this.SendPropertyChanging();
				this._Administrador = value;
				this.SendPropertyChanged("Administrador");
				this.OnAdministradorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Usuario
	{
		get
		{
			return this._Usuario;
		}
		set
		{
			if ((this._Usuario != value))
			{
				this.OnUsuarioChanging(value);
				this.SendPropertyChanging();
				this._Usuario = value;
				this.SendPropertyChanged("Usuario");
				this.OnUsuarioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasenia", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Contrasenia
	{
		get
		{
			return this._Contrasenia;
		}
		set
		{
			if ((this._Contrasenia != value))
			{
				this.OnContraseniaChanging(value);
				this.SendPropertyChanging();
				this._Contrasenia = value;
				this.SendPropertyChanged("Contrasenia");
				this.OnContraseniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(30)")]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(30)")]
	public string Apellido
	{
		get
		{
			return this._Apellido;
		}
		set
		{
			if ((this._Apellido != value))
			{
				this.OnApellidoChanging(value);
				this.SendPropertyChanging();
				this._Apellido = value;
				this.SendPropertyChanged("Apellido");
				this.OnApellidoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Pedido", Storage="_Pedidos", ThisKey="IdVendedor", OtherKey="IdVendedor")]
	public EntitySet<Pedido> Pedidos
	{
		get
		{
			return this._Pedidos;
		}
		set
		{
			this._Pedidos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Pedidos(Pedido entity)
	{
		this.SendPropertyChanging();
		entity.Vendedor = this;
	}
	
	private void detach_Pedidos(Pedido entity)
	{
		this.SendPropertyChanging();
		entity.Vendedor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articulo")]
public partial class Articulo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdArticulo;
	
	private string _Denominacion;
	
	private double _PrecioCompra;
	
	private double _PrecioVenta;
	
	private System.Nullable<int> _IdRubro;
	
	private EntitySet<Detalle> _Detalles;
	
	private EntityRef<Rubro> _Rubro;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdArticuloChanging(int value);
    partial void OnIdArticuloChanged();
    partial void OnDenominacionChanging(string value);
    partial void OnDenominacionChanged();
    partial void OnPrecioCompraChanging(double value);
    partial void OnPrecioCompraChanged();
    partial void OnPrecioVentaChanging(double value);
    partial void OnPrecioVentaChanged();
    partial void OnIdRubroChanging(System.Nullable<int> value);
    partial void OnIdRubroChanged();
    #endregion
	
	public Articulo()
	{
		this._Detalles = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalles), new Action<Detalle>(this.detach_Detalles));
		this._Rubro = default(EntityRef<Rubro>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArticulo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdArticulo
	{
		get
		{
			return this._IdArticulo;
		}
		set
		{
			if ((this._IdArticulo != value))
			{
				this.OnIdArticuloChanging(value);
				this.SendPropertyChanging();
				this._IdArticulo = value;
				this.SendPropertyChanged("IdArticulo");
				this.OnIdArticuloChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominacion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Denominacion
	{
		get
		{
			return this._Denominacion;
		}
		set
		{
			if ((this._Denominacion != value))
			{
				this.OnDenominacionChanging(value);
				this.SendPropertyChanging();
				this._Denominacion = value;
				this.SendPropertyChanged("Denominacion");
				this.OnDenominacionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioCompra", DbType="Float NOT NULL")]
	public double PrecioCompra
	{
		get
		{
			return this._PrecioCompra;
		}
		set
		{
			if ((this._PrecioCompra != value))
			{
				this.OnPrecioCompraChanging(value);
				this.SendPropertyChanging();
				this._PrecioCompra = value;
				this.SendPropertyChanged("PrecioCompra");
				this.OnPrecioCompraChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioVenta", DbType="Float NOT NULL")]
	public double PrecioVenta
	{
		get
		{
			return this._PrecioVenta;
		}
		set
		{
			if ((this._PrecioVenta != value))
			{
				this.OnPrecioVentaChanging(value);
				this.SendPropertyChanging();
				this._PrecioVenta = value;
				this.SendPropertyChanged("PrecioVenta");
				this.OnPrecioVentaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRubro", DbType="Int")]
	public System.Nullable<int> IdRubro
	{
		get
		{
			return this._IdRubro;
		}
		set
		{
			if ((this._IdRubro != value))
			{
				if (this._Rubro.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdRubroChanging(value);
				this.SendPropertyChanging();
				this._IdRubro = value;
				this.SendPropertyChanged("IdRubro");
				this.OnIdRubroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articulo_Detalle", Storage="_Detalles", ThisKey="IdArticulo", OtherKey="IdArticulo")]
	public EntitySet<Detalle> Detalles
	{
		get
		{
			return this._Detalles;
		}
		set
		{
			this._Detalles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rubro_Articulo", Storage="_Rubro", ThisKey="IdRubro", OtherKey="IdRubro", IsForeignKey=true)]
	public Rubro Rubro
	{
		get
		{
			return this._Rubro.Entity;
		}
		set
		{
			Rubro previousValue = this._Rubro.Entity;
			if (((previousValue != value) 
						|| (this._Rubro.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Rubro.Entity = null;
					previousValue.Articulos.Remove(this);
				}
				this._Rubro.Entity = value;
				if ((value != null))
				{
					value.Articulos.Add(this);
					this._IdRubro = value.IdRubro;
				}
				else
				{
					this._IdRubro = default(Nullable<int>);
				}
				this.SendPropertyChanged("Rubro");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Detalles(Detalle entity)
	{
		this.SendPropertyChanging();
		entity.Articulo = this;
	}
	
	private void detach_Detalles(Detalle entity)
	{
		this.SendPropertyChanging();
		entity.Articulo = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdCliente;
	
	private string _RazonSocial;
	
	private string _Cuit;
	
	private System.Nullable<double> _Saldo;
	
	private int _IdDomicilio;
	
	private EntitySet<Pedido> _Pedidos;
	
	private EntityRef<Domicilio> _Domicilio;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnCuitChanging(string value);
    partial void OnCuitChanged();
    partial void OnSaldoChanging(System.Nullable<double> value);
    partial void OnSaldoChanged();
    partial void OnIdDomicilioChanging(int value);
    partial void OnIdDomicilioChanged();
    #endregion
	
	public Cliente()
	{
		this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
		this._Domicilio = default(EntityRef<Domicilio>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdCliente
	{
		get
		{
			return this._IdCliente;
		}
		set
		{
			if ((this._IdCliente != value))
			{
				this.OnIdClienteChanging(value);
				this.SendPropertyChanging();
				this._IdCliente = value;
				this.SendPropertyChanged("IdCliente");
				this.OnIdClienteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RazonSocial", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RazonSocial
	{
		get
		{
			return this._RazonSocial;
		}
		set
		{
			if ((this._RazonSocial != value))
			{
				this.OnRazonSocialChanging(value);
				this.SendPropertyChanging();
				this._RazonSocial = value;
				this.SendPropertyChanged("RazonSocial");
				this.OnRazonSocialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuit", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
	public string Cuit
	{
		get
		{
			return this._Cuit;
		}
		set
		{
			if ((this._Cuit != value))
			{
				this.OnCuitChanging(value);
				this.SendPropertyChanging();
				this._Cuit = value;
				this.SendPropertyChanged("Cuit");
				this.OnCuitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saldo", DbType="Float")]
	public System.Nullable<double> Saldo
	{
		get
		{
			return this._Saldo;
		}
		set
		{
			if ((this._Saldo != value))
			{
				this.OnSaldoChanging(value);
				this.SendPropertyChanging();
				this._Saldo = value;
				this.SendPropertyChanged("Saldo");
				this.OnSaldoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDomicilio", DbType="Int NOT NULL")]
	public int IdDomicilio
	{
		get
		{
			return this._IdDomicilio;
		}
		set
		{
			if ((this._IdDomicilio != value))
			{
				if (this._Domicilio.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdDomicilioChanging(value);
				this.SendPropertyChanging();
				this._IdDomicilio = value;
				this.SendPropertyChanged("IdDomicilio");
				this.OnIdDomicilioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Pedido", Storage="_Pedidos", ThisKey="IdCliente", OtherKey="IdCliente")]
	public EntitySet<Pedido> Pedidos
	{
		get
		{
			return this._Pedidos;
		}
		set
		{
			this._Pedidos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domicilio_Cliente", Storage="_Domicilio", ThisKey="IdDomicilio", OtherKey="IdDomicilio", IsForeignKey=true)]
	public Domicilio Domicilio
	{
		get
		{
			return this._Domicilio.Entity;
		}
		set
		{
			Domicilio previousValue = this._Domicilio.Entity;
			if (((previousValue != value) 
						|| (this._Domicilio.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Domicilio.Entity = null;
					previousValue.Clientes.Remove(this);
				}
				this._Domicilio.Entity = value;
				if ((value != null))
				{
					value.Clientes.Add(this);
					this._IdDomicilio = value.IdDomicilio;
				}
				else
				{
					this._IdDomicilio = default(int);
				}
				this.SendPropertyChanged("Domicilio");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Pedidos(Pedido entity)
	{
		this.SendPropertyChanging();
		entity.Cliente = this;
	}
	
	private void detach_Pedidos(Pedido entity)
	{
		this.SendPropertyChanging();
		entity.Cliente = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle")]
public partial class Detalle : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdDetalle;
	
	private int _Cantidad;
	
	private double _SubTotal;
	
	private double _Descuento;
	
	private double _Total;
	
	private System.Nullable<int> _IdPedido;
	
	private System.Nullable<int> _IdArticulo;
	
	private EntityRef<Articulo> _Articulo;
	
	private EntityRef<Pedido> _Pedido;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDetalleChanging(int value);
    partial void OnIdDetalleChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnSubTotalChanging(double value);
    partial void OnSubTotalChanged();
    partial void OnDescuentoChanging(double value);
    partial void OnDescuentoChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnIdPedidoChanging(System.Nullable<int> value);
    partial void OnIdPedidoChanged();
    partial void OnIdArticuloChanging(System.Nullable<int> value);
    partial void OnIdArticuloChanged();
    #endregion
	
	public Detalle()
	{
		this._Articulo = default(EntityRef<Articulo>);
		this._Pedido = default(EntityRef<Pedido>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdDetalle
	{
		get
		{
			return this._IdDetalle;
		}
		set
		{
			if ((this._IdDetalle != value))
			{
				this.OnIdDetalleChanging(value);
				this.SendPropertyChanging();
				this._IdDetalle = value;
				this.SendPropertyChanged("IdDetalle");
				this.OnIdDetalleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
	public int Cantidad
	{
		get
		{
			return this._Cantidad;
		}
		set
		{
			if ((this._Cantidad != value))
			{
				this.OnCantidadChanging(value);
				this.SendPropertyChanging();
				this._Cantidad = value;
				this.SendPropertyChanged("Cantidad");
				this.OnCantidadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Float NOT NULL")]
	public double SubTotal
	{
		get
		{
			return this._SubTotal;
		}
		set
		{
			if ((this._SubTotal != value))
			{
				this.OnSubTotalChanging(value);
				this.SendPropertyChanging();
				this._SubTotal = value;
				this.SendPropertyChanged("SubTotal");
				this.OnSubTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Float NOT NULL")]
	public double Descuento
	{
		get
		{
			return this._Descuento;
		}
		set
		{
			if ((this._Descuento != value))
			{
				this.OnDescuentoChanging(value);
				this.SendPropertyChanging();
				this._Descuento = value;
				this.SendPropertyChanged("Descuento");
				this.OnDescuentoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
	public double Total
	{
		get
		{
			return this._Total;
		}
		set
		{
			if ((this._Total != value))
			{
				this.OnTotalChanging(value);
				this.SendPropertyChanging();
				this._Total = value;
				this.SendPropertyChanged("Total");
				this.OnTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPedido", DbType="Int")]
	public System.Nullable<int> IdPedido
	{
		get
		{
			return this._IdPedido;
		}
		set
		{
			if ((this._IdPedido != value))
			{
				if (this._Pedido.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdPedidoChanging(value);
				this.SendPropertyChanging();
				this._IdPedido = value;
				this.SendPropertyChanged("IdPedido");
				this.OnIdPedidoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArticulo", DbType="Int")]
	public System.Nullable<int> IdArticulo
	{
		get
		{
			return this._IdArticulo;
		}
		set
		{
			if ((this._IdArticulo != value))
			{
				if (this._Articulo.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdArticuloChanging(value);
				this.SendPropertyChanging();
				this._IdArticulo = value;
				this.SendPropertyChanged("IdArticulo");
				this.OnIdArticuloChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articulo_Detalle", Storage="_Articulo", ThisKey="IdArticulo", OtherKey="IdArticulo", IsForeignKey=true)]
	public Articulo Articulo
	{
		get
		{
			return this._Articulo.Entity;
		}
		set
		{
			Articulo previousValue = this._Articulo.Entity;
			if (((previousValue != value) 
						|| (this._Articulo.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Articulo.Entity = null;
					previousValue.Detalles.Remove(this);
				}
				this._Articulo.Entity = value;
				if ((value != null))
				{
					value.Detalles.Add(this);
					this._IdArticulo = value.IdArticulo;
				}
				else
				{
					this._IdArticulo = default(Nullable<int>);
				}
				this.SendPropertyChanged("Articulo");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Detalle", Storage="_Pedido", ThisKey="IdPedido", OtherKey="IdPedido", IsForeignKey=true)]
	public Pedido Pedido
	{
		get
		{
			return this._Pedido.Entity;
		}
		set
		{
			Pedido previousValue = this._Pedido.Entity;
			if (((previousValue != value) 
						|| (this._Pedido.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Pedido.Entity = null;
					previousValue.Detalles.Remove(this);
				}
				this._Pedido.Entity = value;
				if ((value != null))
				{
					value.Detalles.Add(this);
					this._IdPedido = value.IdPedido;
				}
				else
				{
					this._IdPedido = default(Nullable<int>);
				}
				this.SendPropertyChanged("Pedido");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Domicilio")]
public partial class Domicilio : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdDomicilio;
	
	private string _Calle;
	
	private int _Numero;
	
	private System.Nullable<double> _Latitud;
	
	private System.Nullable<double> _Longitud;
	
	private int _IdLocalidad;
	
	private EntitySet<Cliente> _Clientes;
	
	private EntityRef<Localidad> _Localidad;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDomicilioChanging(int value);
    partial void OnIdDomicilioChanged();
    partial void OnCalleChanging(string value);
    partial void OnCalleChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnLatitudChanging(System.Nullable<double> value);
    partial void OnLatitudChanged();
    partial void OnLongitudChanging(System.Nullable<double> value);
    partial void OnLongitudChanged();
    partial void OnIdLocalidadChanging(int value);
    partial void OnIdLocalidadChanged();
    #endregion
	
	public Domicilio()
	{
		this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
		this._Localidad = default(EntityRef<Localidad>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDomicilio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdDomicilio
	{
		get
		{
			return this._IdDomicilio;
		}
		set
		{
			if ((this._IdDomicilio != value))
			{
				this.OnIdDomicilioChanging(value);
				this.SendPropertyChanging();
				this._IdDomicilio = value;
				this.SendPropertyChanged("IdDomicilio");
				this.OnIdDomicilioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Calle
	{
		get
		{
			return this._Calle;
		}
		set
		{
			if ((this._Calle != value))
			{
				this.OnCalleChanging(value);
				this.SendPropertyChanging();
				this._Calle = value;
				this.SendPropertyChanged("Calle");
				this.OnCalleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
	public int Numero
	{
		get
		{
			return this._Numero;
		}
		set
		{
			if ((this._Numero != value))
			{
				this.OnNumeroChanging(value);
				this.SendPropertyChanging();
				this._Numero = value;
				this.SendPropertyChanged("Numero");
				this.OnNumeroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitud", DbType="Float")]
	public System.Nullable<double> Latitud
	{
		get
		{
			return this._Latitud;
		}
		set
		{
			if ((this._Latitud != value))
			{
				this.OnLatitudChanging(value);
				this.SendPropertyChanging();
				this._Latitud = value;
				this.SendPropertyChanged("Latitud");
				this.OnLatitudChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitud", DbType="Float")]
	public System.Nullable<double> Longitud
	{
		get
		{
			return this._Longitud;
		}
		set
		{
			if ((this._Longitud != value))
			{
				this.OnLongitudChanging(value);
				this.SendPropertyChanging();
				this._Longitud = value;
				this.SendPropertyChanged("Longitud");
				this.OnLongitudChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLocalidad", DbType="Int NOT NULL")]
	public int IdLocalidad
	{
		get
		{
			return this._IdLocalidad;
		}
		set
		{
			if ((this._IdLocalidad != value))
			{
				if (this._Localidad.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdLocalidadChanging(value);
				this.SendPropertyChanging();
				this._IdLocalidad = value;
				this.SendPropertyChanged("IdLocalidad");
				this.OnIdLocalidadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domicilio_Cliente", Storage="_Clientes", ThisKey="IdDomicilio", OtherKey="IdDomicilio")]
	public EntitySet<Cliente> Clientes
	{
		get
		{
			return this._Clientes;
		}
		set
		{
			this._Clientes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localidad_Domicilio", Storage="_Localidad", ThisKey="IdLocalidad", OtherKey="IdLocalidad", IsForeignKey=true)]
	public Localidad Localidad
	{
		get
		{
			return this._Localidad.Entity;
		}
		set
		{
			Localidad previousValue = this._Localidad.Entity;
			if (((previousValue != value) 
						|| (this._Localidad.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Localidad.Entity = null;
					previousValue.Domicilios.Remove(this);
				}
				this._Localidad.Entity = value;
				if ((value != null))
				{
					value.Domicilios.Add(this);
					this._IdLocalidad = value.IdLocalidad;
				}
				else
				{
					this._IdLocalidad = default(int);
				}
				this.SendPropertyChanged("Localidad");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Clientes(Cliente entity)
	{
		this.SendPropertyChanging();
		entity.Domicilio = this;
	}
	
	private void detach_Clientes(Cliente entity)
	{
		this.SendPropertyChanging();
		entity.Domicilio = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Localidad")]
public partial class Localidad : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdLocalidad;
	
	private string _Denominacion;
	
	private int _IdProvincia;
	
	private EntitySet<Domicilio> _Domicilios;
	
	private EntityRef<Provincia> _Provincia;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLocalidadChanging(int value);
    partial void OnIdLocalidadChanged();
    partial void OnDenominacionChanging(string value);
    partial void OnDenominacionChanged();
    partial void OnIdProvinciaChanging(int value);
    partial void OnIdProvinciaChanged();
    #endregion
	
	public Localidad()
	{
		this._Domicilios = new EntitySet<Domicilio>(new Action<Domicilio>(this.attach_Domicilios), new Action<Domicilio>(this.detach_Domicilios));
		this._Provincia = default(EntityRef<Provincia>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLocalidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdLocalidad
	{
		get
		{
			return this._IdLocalidad;
		}
		set
		{
			if ((this._IdLocalidad != value))
			{
				this.OnIdLocalidadChanging(value);
				this.SendPropertyChanging();
				this._IdLocalidad = value;
				this.SendPropertyChanged("IdLocalidad");
				this.OnIdLocalidadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominacion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Denominacion
	{
		get
		{
			return this._Denominacion;
		}
		set
		{
			if ((this._Denominacion != value))
			{
				this.OnDenominacionChanging(value);
				this.SendPropertyChanging();
				this._Denominacion = value;
				this.SendPropertyChanged("Denominacion");
				this.OnDenominacionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvincia", DbType="Int NOT NULL")]
	public int IdProvincia
	{
		get
		{
			return this._IdProvincia;
		}
		set
		{
			if ((this._IdProvincia != value))
			{
				if (this._Provincia.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdProvinciaChanging(value);
				this.SendPropertyChanging();
				this._IdProvincia = value;
				this.SendPropertyChanged("IdProvincia");
				this.OnIdProvinciaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localidad_Domicilio", Storage="_Domicilios", ThisKey="IdLocalidad", OtherKey="IdLocalidad")]
	public EntitySet<Domicilio> Domicilios
	{
		get
		{
			return this._Domicilios;
		}
		set
		{
			this._Domicilios.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Localidad", Storage="_Provincia", ThisKey="IdProvincia", OtherKey="IdProvincia", IsForeignKey=true)]
	public Provincia Provincia
	{
		get
		{
			return this._Provincia.Entity;
		}
		set
		{
			Provincia previousValue = this._Provincia.Entity;
			if (((previousValue != value) 
						|| (this._Provincia.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Provincia.Entity = null;
					previousValue.Localidads.Remove(this);
				}
				this._Provincia.Entity = value;
				if ((value != null))
				{
					value.Localidads.Add(this);
					this._IdProvincia = value.IdProvincia;
				}
				else
				{
					this._IdProvincia = default(int);
				}
				this.SendPropertyChanged("Provincia");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Domicilios(Domicilio entity)
	{
		this.SendPropertyChanging();
		entity.Localidad = this;
	}
	
	private void detach_Domicilios(Domicilio entity)
	{
		this.SendPropertyChanging();
		entity.Localidad = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdPais;
	
	private string _Denominacion;
	
	private EntitySet<Provincia> _Provincias;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaisChanging(int value);
    partial void OnIdPaisChanged();
    partial void OnDenominacionChanging(string value);
    partial void OnDenominacionChanged();
    #endregion
	
	public Pai()
	{
		this._Provincias = new EntitySet<Provincia>(new Action<Provincia>(this.attach_Provincias), new Action<Provincia>(this.detach_Provincias));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdPais
	{
		get
		{
			return this._IdPais;
		}
		set
		{
			if ((this._IdPais != value))
			{
				this.OnIdPaisChanging(value);
				this.SendPropertyChanging();
				this._IdPais = value;
				this.SendPropertyChanged("IdPais");
				this.OnIdPaisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominacion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Denominacion
	{
		get
		{
			return this._Denominacion;
		}
		set
		{
			if ((this._Denominacion != value))
			{
				this.OnDenominacionChanging(value);
				this.SendPropertyChanging();
				this._Denominacion = value;
				this.SendPropertyChanged("Denominacion");
				this.OnDenominacionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Provincia", Storage="_Provincias", ThisKey="IdPais", OtherKey="IdPais")]
	public EntitySet<Provincia> Provincias
	{
		get
		{
			return this._Provincias;
		}
		set
		{
			this._Provincias.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Provincias(Provincia entity)
	{
		this.SendPropertyChanging();
		entity.Pai = this;
	}
	
	private void detach_Provincias(Provincia entity)
	{
		this.SendPropertyChanging();
		entity.Pai = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedido")]
public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdPedido;
	
	private bool _Editable;
	
	private string _Estado;
	
	private bool _Pagado;
	
	private System.DateTime _FechaPedido;
	
	private System.DateTime _FechaEntrega;
	
	private double _SubTotal;
	
	private double _GastosEnvio;
	
	private double _Total;
	
	private int _IdCliente;
	
	private int _IdVendedor;
	
	private EntitySet<Detalle> _Detalles;
	
	private EntityRef<Cliente> _Cliente;
	
	private EntityRef<Vendedor> _Vendedor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPedidoChanging(int value);
    partial void OnIdPedidoChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnPagadoChanging(bool value);
    partial void OnPagadoChanged();
    partial void OnFechaPedidoChanging(System.DateTime value);
    partial void OnFechaPedidoChanged();
    partial void OnFechaEntregaChanging(System.DateTime value);
    partial void OnFechaEntregaChanged();
    partial void OnSubTotalChanging(double value);
    partial void OnSubTotalChanged();
    partial void OnGastosEnvioChanging(double value);
    partial void OnGastosEnvioChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnIdVendedorChanging(int value);
    partial void OnIdVendedorChanged();
    #endregion
	
	public Pedido()
	{
		this._Detalles = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalles), new Action<Detalle>(this.detach_Detalles));
		this._Cliente = default(EntityRef<Cliente>);
		this._Vendedor = default(EntityRef<Vendedor>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdPedido
	{
		get
		{
			return this._IdPedido;
		}
		set
		{
			if ((this._IdPedido != value))
			{
				this.OnIdPedidoChanging(value);
				this.SendPropertyChanging();
				this._IdPedido = value;
				this.SendPropertyChanged("IdPedido");
				this.OnIdPedidoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit NOT NULL")]
	public bool Editable
	{
		get
		{
			return this._Editable;
		}
		set
		{
			if ((this._Editable != value))
			{
				this.OnEditableChanging(value);
				this.SendPropertyChanging();
				this._Editable = value;
				this.SendPropertyChanged("Editable");
				this.OnEditableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Estado
	{
		get
		{
			return this._Estado;
		}
		set
		{
			if ((this._Estado != value))
			{
				this.OnEstadoChanging(value);
				this.SendPropertyChanging();
				this._Estado = value;
				this.SendPropertyChanged("Estado");
				this.OnEstadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pagado", DbType="Bit NOT NULL")]
	public bool Pagado
	{
		get
		{
			return this._Pagado;
		}
		set
		{
			if ((this._Pagado != value))
			{
				this.OnPagadoChanging(value);
				this.SendPropertyChanging();
				this._Pagado = value;
				this.SendPropertyChanged("Pagado");
				this.OnPagadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPedido", DbType="Date NOT NULL")]
	public System.DateTime FechaPedido
	{
		get
		{
			return this._FechaPedido;
		}
		set
		{
			if ((this._FechaPedido != value))
			{
				this.OnFechaPedidoChanging(value);
				this.SendPropertyChanging();
				this._FechaPedido = value;
				this.SendPropertyChanged("FechaPedido");
				this.OnFechaPedidoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEntrega", DbType="Date NOT NULL")]
	public System.DateTime FechaEntrega
	{
		get
		{
			return this._FechaEntrega;
		}
		set
		{
			if ((this._FechaEntrega != value))
			{
				this.OnFechaEntregaChanging(value);
				this.SendPropertyChanging();
				this._FechaEntrega = value;
				this.SendPropertyChanged("FechaEntrega");
				this.OnFechaEntregaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Float NOT NULL")]
	public double SubTotal
	{
		get
		{
			return this._SubTotal;
		}
		set
		{
			if ((this._SubTotal != value))
			{
				this.OnSubTotalChanging(value);
				this.SendPropertyChanging();
				this._SubTotal = value;
				this.SendPropertyChanged("SubTotal");
				this.OnSubTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GastosEnvio", DbType="Float NOT NULL")]
	public double GastosEnvio
	{
		get
		{
			return this._GastosEnvio;
		}
		set
		{
			if ((this._GastosEnvio != value))
			{
				this.OnGastosEnvioChanging(value);
				this.SendPropertyChanging();
				this._GastosEnvio = value;
				this.SendPropertyChanged("GastosEnvio");
				this.OnGastosEnvioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
	public double Total
	{
		get
		{
			return this._Total;
		}
		set
		{
			if ((this._Total != value))
			{
				this.OnTotalChanging(value);
				this.SendPropertyChanging();
				this._Total = value;
				this.SendPropertyChanged("Total");
				this.OnTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
	public int IdCliente
	{
		get
		{
			return this._IdCliente;
		}
		set
		{
			if ((this._IdCliente != value))
			{
				if (this._Cliente.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdClienteChanging(value);
				this.SendPropertyChanging();
				this._IdCliente = value;
				this.SendPropertyChanged("IdCliente");
				this.OnIdClienteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVendedor", DbType="Int NOT NULL")]
	public int IdVendedor
	{
		get
		{
			return this._IdVendedor;
		}
		set
		{
			if ((this._IdVendedor != value))
			{
				if (this._Vendedor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdVendedorChanging(value);
				this.SendPropertyChanging();
				this._IdVendedor = value;
				this.SendPropertyChanged("IdVendedor");
				this.OnIdVendedorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Detalle", Storage="_Detalles", ThisKey="IdPedido", OtherKey="IdPedido")]
	public EntitySet<Detalle> Detalles
	{
		get
		{
			return this._Detalles;
		}
		set
		{
			this._Detalles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Pedido", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
	public Cliente Cliente
	{
		get
		{
			return this._Cliente.Entity;
		}
		set
		{
			Cliente previousValue = this._Cliente.Entity;
			if (((previousValue != value) 
						|| (this._Cliente.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Cliente.Entity = null;
					previousValue.Pedidos.Remove(this);
				}
				this._Cliente.Entity = value;
				if ((value != null))
				{
					value.Pedidos.Add(this);
					this._IdCliente = value.IdCliente;
				}
				else
				{
					this._IdCliente = default(int);
				}
				this.SendPropertyChanged("Cliente");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Pedido", Storage="_Vendedor", ThisKey="IdVendedor", OtherKey="IdVendedor", IsForeignKey=true)]
	public Vendedor Vendedor
	{
		get
		{
			return this._Vendedor.Entity;
		}
		set
		{
			Vendedor previousValue = this._Vendedor.Entity;
			if (((previousValue != value) 
						|| (this._Vendedor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Vendedor.Entity = null;
					previousValue.Pedidos.Remove(this);
				}
				this._Vendedor.Entity = value;
				if ((value != null))
				{
					value.Pedidos.Add(this);
					this._IdVendedor = value.IdVendedor;
				}
				else
				{
					this._IdVendedor = default(int);
				}
				this.SendPropertyChanged("Vendedor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Detalles(Detalle entity)
	{
		this.SendPropertyChanging();
		entity.Pedido = this;
	}
	
	private void detach_Detalles(Detalle entity)
	{
		this.SendPropertyChanging();
		entity.Pedido = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provincia")]
public partial class Provincia : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdProvincia;
	
	private string _Denominacion;
	
	private int _IdPais;
	
	private EntitySet<Localidad> _Localidads;
	
	private EntityRef<Pai> _Pai;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProvinciaChanging(int value);
    partial void OnIdProvinciaChanged();
    partial void OnDenominacionChanging(string value);
    partial void OnDenominacionChanged();
    partial void OnIdPaisChanging(int value);
    partial void OnIdPaisChanged();
    #endregion
	
	public Provincia()
	{
		this._Localidads = new EntitySet<Localidad>(new Action<Localidad>(this.attach_Localidads), new Action<Localidad>(this.detach_Localidads));
		this._Pai = default(EntityRef<Pai>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvincia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdProvincia
	{
		get
		{
			return this._IdProvincia;
		}
		set
		{
			if ((this._IdProvincia != value))
			{
				this.OnIdProvinciaChanging(value);
				this.SendPropertyChanging();
				this._IdProvincia = value;
				this.SendPropertyChanged("IdProvincia");
				this.OnIdProvinciaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominacion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Denominacion
	{
		get
		{
			return this._Denominacion;
		}
		set
		{
			if ((this._Denominacion != value))
			{
				this.OnDenominacionChanging(value);
				this.SendPropertyChanging();
				this._Denominacion = value;
				this.SendPropertyChanged("Denominacion");
				this.OnDenominacionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", DbType="Int NOT NULL")]
	public int IdPais
	{
		get
		{
			return this._IdPais;
		}
		set
		{
			if ((this._IdPais != value))
			{
				if (this._Pai.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdPaisChanging(value);
				this.SendPropertyChanging();
				this._IdPais = value;
				this.SendPropertyChanged("IdPais");
				this.OnIdPaisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Localidad", Storage="_Localidads", ThisKey="IdProvincia", OtherKey="IdProvincia")]
	public EntitySet<Localidad> Localidads
	{
		get
		{
			return this._Localidads;
		}
		set
		{
			this._Localidads.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Provincia", Storage="_Pai", ThisKey="IdPais", OtherKey="IdPais", IsForeignKey=true)]
	public Pai Pai
	{
		get
		{
			return this._Pai.Entity;
		}
		set
		{
			Pai previousValue = this._Pai.Entity;
			if (((previousValue != value) 
						|| (this._Pai.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Pai.Entity = null;
					previousValue.Provincias.Remove(this);
				}
				this._Pai.Entity = value;
				if ((value != null))
				{
					value.Provincias.Add(this);
					this._IdPais = value.IdPais;
				}
				else
				{
					this._IdPais = default(int);
				}
				this.SendPropertyChanged("Pai");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Localidads(Localidad entity)
	{
		this.SendPropertyChanging();
		entity.Provincia = this;
	}
	
	private void detach_Localidads(Localidad entity)
	{
		this.SendPropertyChanging();
		entity.Provincia = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rubro")]
public partial class Rubro : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdRubro;
	
	private string _Denominacion;
	
	private System.Nullable<int> _IdRubroSuperior;
	
	private EntitySet<Articulo> _Articulos;
	
	private EntitySet<Rubro> _Rubros;
	
	private EntityRef<Rubro> _Rubro1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRubroChanging(int value);
    partial void OnIdRubroChanged();
    partial void OnDenominacionChanging(string value);
    partial void OnDenominacionChanged();
    partial void OnIdRubroSuperiorChanging(System.Nullable<int> value);
    partial void OnIdRubroSuperiorChanged();
    #endregion
	
	public Rubro()
	{
		this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
		this._Rubros = new EntitySet<Rubro>(new Action<Rubro>(this.attach_Rubros), new Action<Rubro>(this.detach_Rubros));
		this._Rubro1 = default(EntityRef<Rubro>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRubro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdRubro
	{
		get
		{
			return this._IdRubro;
		}
		set
		{
			if ((this._IdRubro != value))
			{
				this.OnIdRubroChanging(value);
				this.SendPropertyChanging();
				this._IdRubro = value;
				this.SendPropertyChanged("IdRubro");
				this.OnIdRubroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominacion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Denominacion
	{
		get
		{
			return this._Denominacion;
		}
		set
		{
			if ((this._Denominacion != value))
			{
				this.OnDenominacionChanging(value);
				this.SendPropertyChanging();
				this._Denominacion = value;
				this.SendPropertyChanged("Denominacion");
				this.OnDenominacionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRubroSuperior", DbType="Int")]
	public System.Nullable<int> IdRubroSuperior
	{
		get
		{
			return this._IdRubroSuperior;
		}
		set
		{
			if ((this._IdRubroSuperior != value))
			{
				if (this._Rubro1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdRubroSuperiorChanging(value);
				this.SendPropertyChanging();
				this._IdRubroSuperior = value;
				this.SendPropertyChanged("IdRubroSuperior");
				this.OnIdRubroSuperiorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rubro_Articulo", Storage="_Articulos", ThisKey="IdRubro", OtherKey="IdRubro")]
	public EntitySet<Articulo> Articulos
	{
		get
		{
			return this._Articulos;
		}
		set
		{
			this._Articulos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rubro_Rubro", Storage="_Rubros", ThisKey="IdRubro", OtherKey="IdRubroSuperior")]
	public EntitySet<Rubro> Rubros
	{
		get
		{
			return this._Rubros;
		}
		set
		{
			this._Rubros.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rubro_Rubro", Storage="_Rubro1", ThisKey="IdRubroSuperior", OtherKey="IdRubro", IsForeignKey=true)]
	public Rubro Rubro1
	{
		get
		{
			return this._Rubro1.Entity;
		}
		set
		{
			Rubro previousValue = this._Rubro1.Entity;
			if (((previousValue != value) 
						|| (this._Rubro1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Rubro1.Entity = null;
					previousValue.Rubros.Remove(this);
				}
				this._Rubro1.Entity = value;
				if ((value != null))
				{
					value.Rubros.Add(this);
					this._IdRubroSuperior = value.IdRubro;
				}
				else
				{
					this._IdRubroSuperior = default(Nullable<int>);
				}
				this.SendPropertyChanged("Rubro1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Articulos(Articulo entity)
	{
		this.SendPropertyChanging();
		entity.Rubro = this;
	}
	
	private void detach_Articulos(Articulo entity)
	{
		this.SendPropertyChanging();
		entity.Rubro = null;
	}
	
	private void attach_Rubros(Rubro entity)
	{
		this.SendPropertyChanging();
		entity.Rubro1 = this;
	}
	
	private void detach_Rubros(Rubro entity)
	{
		this.SendPropertyChanging();
		entity.Rubro1 = null;
	}
}

public partial class GetIdentityRubroResult
{
	
	private System.Nullable<decimal> _Column1;
	
	public GetIdentityRubroResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
	public System.Nullable<decimal> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class GetIdentityArticuloResult
{
	
	private System.Nullable<decimal> _Column1;
	
	public GetIdentityArticuloResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
	public System.Nullable<decimal> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class GetIdentityPedidoResult
{
	
	private System.Nullable<decimal> _Column1;
	
	public GetIdentityPedidoResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
	public System.Nullable<decimal> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}
#pragma warning restore 1591
